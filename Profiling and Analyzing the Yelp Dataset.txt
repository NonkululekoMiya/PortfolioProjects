Data Scientist Role Play: Profiling and Analyzing the Yelp Dataset Coursera Worksheet

This is a 2-part assignment. In the first part, you are asked a series of questions that will help you profile and understand the data just like a data scientist would. For this first part of the assignment, you will be assessed both on the correctness of your findings, as well as the code you used to arrive at your answer. You will be graded on how easy your code is to read, so remember to use proper formatting and comments where necessary.

In the second part of the assignment, you are asked to come up with your own inferences and analysis of the data for a particular research question you want to answer. You will be required to prepare the dataset for the analysis you choose to do. As with the first part, you will be graded, in part, on how easy your code is to read, so use proper formatting and comments to illustrate and communicate your intent as required.

For both parts of this assignment, use this "worksheet." It provides all the questions you are being asked, and your job will be to transfer your answers and SQL coding where indicated into this worksheet so that your peers can review your work. You should be able to use any Text Editor (Windows Notepad, Apple TextEdit, Notepad ++, Sublime Text, etc.) to copy and paste your answers. If you are going to use Word or some other page layout application, just be careful to make sure your answers and code are lined appropriately.
In this case, you may want to save as a PDF to ensure your formatting remains intact for you reviewer.

Part 1: Yelp Dataset Profiling and Understanding

1. Profile the data by finding the total number of records for each of the tables below:
	
/* Query used for each table: SELECT COUNT(*) FROM table */

i. Attribute table = 10000
ii. Business table = 10000
iii. Category table = 10000
iv. Checkin table = 10000
v. elite_years table = 10000
vi. friend table = 10000
vii. hours table = 10000
viii. photo table = 10000
ix. review table = 10000
x. tip table = 10000
xi. user table = 10000

2. Find the total distinct records by either the foreign key or primary key for each table. 
If two foreign keys are listed in the table, please specify which foreign key.

/* Query used for each table: SELECT COUNT(DISTINCT(key)) FROM table */

i. Business = 1000, key: id
ii. Hours = 1562, key: business_id
iii. Category = 2643, key: business_id
iv. Attribute = 1115, key: business_id
v. Review = 10000, key: id; 8090, key: business_id; 9581, key: user_id
vi. Checkin = 493, key: business_id
vii. Photo = 10000, key: id; 6493, key: business_id 
viii. Tip = 3979, key: business_id; 537, key: user_id
ix. User = 10000, key: id 
x. Friend = 11, key: user_id
xi. Elite_years = 2780, key: user_id

3. Are there any columns with null values in the Users table? Indicate "yes," or "no."

	Answer: no
	
	SQL code used to arrive at answer: 
SELECT COUNT(*)
FROM user
WHERE id IS NULL OR 
name IS NULL OR
review_count IS NULL OR
yelping_since IS NULL OR
useful IS NULL OR
funny IS NULL OR
cool IS NULL OR
fans IS NULL OR
average_stars IS NULL OR 
compliment_hot IS NULL OR 
compliment_more IS NULL OR 
compliment_profile IS NULL OR 
compliment_cute IS NULL OR  
compliment_list IS NULL OR 
compliment_note IS NULL OR 
compliment_plain IS NULL OR 
compliment_cool IS NULL OR 
compliment_funny IS NULL OR 
compliment_writer IS NULL OR 
compliment_photos IS NULL

4. For each table and column listed below, display the smallest (minimum), largest (maximum), and average (mean) value for the following fields:

/* Query used for each table: SELECT MIN(column), MAX(Column), AVG(Column) FROM table */
	
	i. Table: Review, Column: Stars
	
		min: 1		max: 5		avg: 3.7082
		
	ii. Table: Business, Column: Stars
	
		min: 1.0	max: 5.0	avg: 3.6549
	
	iii. Table: Tip, Column: Likes
	
		min: 0		max: 2		avg: 0.0144
		
	iv. Table: Checkin, Column: Count
	
		min: 1		max: 53		avg: 1.9414
	v. Table: User, Column: Review_count
	
		min: 0		max: 2000	avg: 24.2995


5. List the cities with the most reviews in descending order:

	SQL code used to arrive at answer: 

SELECT city, SUM(review_count)
FROM business
GROUP BY city
ORDER BY SUM(review_count) DESC
	
	Copy and Paste the Result Below:
 
+-----------------+-------------------+
| city            | SUM(review_count) |
+-----------------+-------------------+
| Las Vegas       |             82854 |
| Phoenix         |             34503 |
| Toronto         |             24113 |
| Scottsdale      |             20614 |
| Charlotte       |             12523 |
| Henderson       |             10871 |
| Tempe           |             10504 |
| Pittsburgh      |              9798 |
| Montréal        |              9448 |
| Chandler        |              8112 |
| Mesa            |              6875 |
| Gilbert         |              6380 |
| Cleveland       |              5593 |
| Madison         |              5265 |
| Glendale        |              4406 |
| Mississauga     |              3814 |
| Edinburgh       |              2792 |
| Peoria          |              2624 |
| North Las Vegas |              2438 |
| Markham         |              2352 |
| Champaign       |              2029 |
| Stuttgart       |              1849 |
| Surprise        |              1520 |
| Lakewood        |              1465 |
| Goodyear        |              1155 |
+-----------------+-------------------+
(Output limit exceeded, 25 of 362 total rows shown)

6. Find the distribution of star ratings to the business in the following cities:

i. Avon

SQL code used to arrive at answer:

SELECT stars, COUNT(stars) AS count
FROM business
WHERE city = 'Avon'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):
 
 +-------+-------+
| stars | count |
+-------+-------+
|   1.5 |     1 |
|   2.5 |     2 |
|   3.5 |     3 |
|   4.0 |     2 |
|   4.5 |     1 |
|   5.0 |     1 |
+-------+-------+

ii. Beachwood
SQL code used to arrive at answer:

SELECT stars, COUNT(stars) AS count
FROM business
WHERE city = 'Beachwood'
GROUP BY stars

Copy and Paste the Resulting Table Below (2 columns â€“ star rating and count):

+-------+-------+
| stars | count |
+-------+-------+
|   2.0 |     1 |
|   2.5 |     1 |
|   3.0 |     2 |
|   3.5 |     2 |
|   4.0 |     1 |
|   4.5 |     2 |
|   5.0 |     5 |
+-------+-------+ 

7. Find the top 3 users based on their total number of reviews:
		
	SQL code used to arrive at answer:
	
SELECT name, review_count
FROM user
ORDER BY review_count DESC
LIMIT 3

	Copy and Paste the Result Below:
 
 +--------+--------------+
| name   | review_count |
+--------+--------------+
| Gerald |         2000 |
| Sara   |         1629 |
| Yuri   |         1339 |
+--------+--------------+

8. Does posing more reviews correlate with more fans?

No
	Please explain your findings and interpretation of the results:
	
Based on the query results below for fans and review_count, there is no clear indication that the more fans there are, the more reviews.

SELECT name, fans, review_count
FROM user
ORDER BY fans DESC

+-----------+------+--------------+
| name      | fans | review_count |
+-----------+------+--------------+
| Amy       |  503 |          609 |
| Mimi      |  497 |          968 |
| Harald    |  311 |         1153 |
| Gerald    |  253 |         2000 |
| Christine |  173 |          930 |
| Lisa      |  159 |          813 |
| Cat       |  133 |          377 |
| William   |  126 |         1215 |
| Fran      |  124 |          862 |
| Lissa     |  120 |          834 |
| Mark      |  115 |          861 |
| Tiffany   |  111 |          408 |
| bernice   |  105 |          255 |
| Roanna    |  104 |         1039 |
| Angela    |  101 |          694 |
| .Hon      |  101 |         1246 |
| Ben       |   96 |          307 |
| Linda     |   89 |          584 |
| Christina |   85 |          842 |
| Jessica   |   84 |          220 |
| Greg      |   81 |          408 |
| Nieves    |   80 |          178 |
| Sui       |   78 |          754 |
| Yuri      |   76 |         1339 |
| Nicole    |   73 |          161 |
+-----------+------+--------------+
(Output limit exceeded, 25 of 10000 total rows shown)


9. Are there more reviews with the word "love" or with the word "hate" in them?

	Answer: Yes, there are 1780 reviews with the word “love” against 232 reviews with the word “hate” in them.
	SQL code used to arrive at answer:
	
SELECT COUNT(*)
FROM review
WHERE text LIKE '%love%'

+----------+
| COUNT(*) |
+----------+
|     1780 |
+----------+
 
SELECT COUNT(*)
FROM review
WHERE text LIKE '%hate%'

+----------+
| COUNT(*) |
+----------+
|      232 |
+----------+
 

10. Find the top 10 users with the most fans:

	SQL code used to arrive at answer:
	
SELECT name, SUM(fans)
FROM user
GROUP BY fans
ORDER BY fans DESC
Limit 10

	Copy and Paste the Result Below:
 
+-----------+-----------+
| name      | SUM(fans) |
+-----------+-----------+
| Amy       |       503 |
| Mimi      |       497 |
| Harald    |       311 |
| Gerald    |       253 |
| Christine |       173 |
| Lisa      |       159 |
| Cat       |       133 |
| William   |       126 |
| Fran      |       124 |
| Lissa     |       120 |
+-----------+-----------+

Part 2: Inferences and Analysis

1. Pick one city and category of your choice and group the businesses in that city or category by their overall star rating. Compare the businesses with 2-3 stars to the businesses with 4-5 stars and answer the following questions. Include your code.
	
/* The city I chose is Toronto with the Restaurant category */

i. Do the two groups you chose to analyze have a different distribution of hours?


No. The hours for both groups vary.

 
ii. Do the two groups you chose to analyze have a different number of reviews?

         
Since the dataset has a low number of results returned, it’s difficult to conclude on the correlation. As seen in the table, 99 Cent Sushi is a 2-star rated business with 5 views, whereas Sushi Osaka is a 4.5 rated business with 8 views, so we can say there’s no correlation between the two.
         

iii. Are you able to infer anything from the location data provided between these two groups? Explain.

Not really. The groups have distinct postal codes/locations.

+---------------+---------+-------+-------------+----------------------+--------------+-----------------------+-------------+
| name          | city    | stars | category    | hours                | review_count | address               | postal_code |
+---------------+---------+-------+-------------+----------------------+--------------+-----------------------+-------------+
| 99 Cent Sushi | Toronto |   2.0 | Restaurants | Saturday|11:00-23:00 |            5 | 389 Church Street     | M5B 2E5     |
| Pizzaiolo     | Toronto |   3.0 | Restaurants | Saturday|10:00-4:00  |           34 | 270 Adelaide Street W | M5H 1X6     |
| Edulis        | Toronto |   4.0 | Restaurants | Saturday|18:00-23:00 |           89 | 169 Niagara Street    | M5V         |
| Sushi Osaka   | Toronto |   4.5 | Restaurants | Saturday|11:00-23:00 |            8 | 5084 Dundas Street W  | M9A 1C2     |
+---------------+---------+-------+-------------+----------------------+--------------+-----------------------+-------------+

SQL code used for analysis:

SELECT name, city, stars, category, hours, review_count, address, postal_code
FROM business INNER JOIN category
    ON business.id = category.business_id
    INNER JOIN hours ON hours.business_id = business.id
WHERE city = 'Toronto' AND category = 'Restaurants'
GROUP BY stars


2. Group business based on the ones that are open and the ones that are closed. What differences can you find between the ones that are still open and the ones that are closed? List at least two differences and the SQL code you used to arrive at your answer.
		
i. Difference 1:

The businesses that are still open have more reviews than the ones that are closed.       
         
ii. Difference 2:
        
The ones that are open have a higher an average star rating of 3.68 whereas the closed ones have an average rating of 3.52.
         
SQL code used for analysis:

SELECT COUNT(DISTINCT(id), AVG(review_count), SUM(review_count), AVG(stars), is_open
FROM business
GROUP BY is_open
 
 

3. For this last part of your analysis, you are going to choose the type of analysis you want to conduct on the Yelp dataset and are going to prepare the data for analysis.

Ideas for analysis include: Parsing out keywords and business attributes for sentiment analysis, clustering businesses to find commonalities or anomalies between them, predicting the overall star rating for a business, predicting the number of fans a user will have, and so on. These are just a few examples to get you started, so feel free to be creative and come up with your own problem you want to solve. Provide answers, in-line, to all of the following:
	
i. Indicate the type of analysis you chose to do:


My friend and I love trying out different restaurants especially when we’re in a new place. She will be going to Canada soon for her studies in Ontario and I thought I could do some analysis to see which restaurants had a star rating of 4.0 and above so she can try them out over the weekend.
         
         
ii. Write 1-2 brief paragraphs on the type of data you will need for your analysis and why you chose that data:

Since I am looking for restaurants that are specifically in Ontario, I will need data from the “category” table and the “business” table, which contains the city, state, and name of the place. I also need to know the star rating of the restaurants and the review count so that she can explore the restaurants with a higher review count first since her stay will be short. I will need the “hours” table so she knows when they’ll be open, and most importantly, I need to only include the restaurants that are open.

                                       
iii. Output of your finished dataset:

+-------------+-------------+-------+-------+------------------------------+--------------+----------------------+
| category    | city        | state | stars | name                         | review_count | hours                |
+-------------+-------------+-------+-------+------------------------------+--------------+----------------------+
| Restaurants | Toronto     | ON    |   4.5 | Sushi Osaka                  |            8 | Saturday|11:00-23:00 |
| Restaurants | Toronto     | ON    |   4.5 | Cabin Fever                  |           26 | Saturday|16:00-2:00  |
| Restaurants | Mississauga | ON    |   4.0 | Masamune Japanese Restaurant |           61 | Saturday|12:00-22:00 |
| Restaurants | Mississauga | ON    |   4.0 | Hermanos Mexican Grill       |           69 | Saturday|12:00-21:00 |
| Restaurants | Toronto     | ON    |   4.0 | Edulis                       |           89 | Saturday|18:00-23:00 |
+-------------+-------------+-------+-------+------------------------------+--------------+----------------------+
         
iv. Provide the SQL code you used to create your final dataset:

SELECT category, city, state, stars, name, review_count, hours
FROM business 
     INNER JOIN category ON business.id = category.business_id
     INNER JOIN hours ON hours.business_id = business.id
WHERE category = 'Restaurants' AND stars >= '4.0'
AND is_open = '1' AND state = 'ON'
GROUP BY review_count
